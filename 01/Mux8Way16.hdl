// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    //A-D share the same msb value of 0
    //E-H share the same msb value of 1
    //Thus, select from A-D and E-H respectively
    //by performing two four way multiplexes
    //using the two least significant bits.

    //Layer 1 - top two lsb
    Mux4Way16(a=a,b=b,c=c,d=d,sel=sel[0..1],out=muxAD);
    Mux4Way16(a=e,b=f,c=g,d=h,sel=sel[0..1],out=muxEH);

    //Laye2 - use msb to determine which result
    //from layer1 to output
    Mux16(a=muxAD,b=muxEH,sel=sel[2],out=out);

}