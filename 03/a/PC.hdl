// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    /** Two Multiplexers will control 
     *  Pathway from the three possible load 
     *  points, namely ground to reset, 
     *  the external in bus for load, 
     *  and the internal incrementor
     *  The first two shall be determined
     *  by the reset and load flags, 
     *  and the multiplexers will default to 
     *  passing along the incrementor should
     *  load and reset both be false.
     *
     *  In order to trigger loading a value into the 
     *  the register, all at least one of the flags must be
     *  set.  Thus, even though the multiplexers
     *  will send the incrementors output regardless of
     *  INC's value if reset=load=0, the resgister
     *  will only store the incremented value if 
     *  INC is set.
     */

     //Determine whether or not store new value in register
     Or(a=reset,b=load,out=rl);
     Or(a=rl,b=inc,out=anyFlags);

    //receive data from multiplexors, output
    //to output bus and incrementor
     Register(in=data,load=anyFlags,out=out,out=toInc);

     //Give reseting top priority over increment and load
     Mux16(a=fromIncIn,b=false,sel=reset,out=data);

     //Give loading from bus priority over incremeting
     Mux16(a=fromInc,b=in,sel=load,out=fromIncIn);

     //increment value from register
     Inc16(in=toInc,out=fromInc);

}
